<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-12T18:28:13 EET" name="Default suite" finished-at="2021-05-12T18:28:27 EET" duration-ms="13852">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@54bff557]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-05-12T18:28:13 EET" name="Default test" finished-at="2021-05-12T18:28:27 EET" duration-ms="13852">
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="OpenDriver(java.lang.String)[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:04 EET" name="OpenDriver" finished-at="2021-05-12T18:28:13 EET" duration-ms="8859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenDriver -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:13 EET" name="setUpClass" finished-at="2021-05-12T18:28:16 EET" duration-ms="2611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:16 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-05-12T18:28:17 EET" duration-ms="1461" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Registered User Can Search the Product and add to Cart with Check Out"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[E2E Automated Test Script]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User is already opened web site' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("User is already opened web site")
public void user_is_already_opened_web_site() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User search the product")
public void user_search_the_product() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User Can add product to Cart")
public void user_can_add_product_to_cart() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User navigate to cart page and Check Out Product and")
public void user_navigate_to_cart_page_and_check_out_product_and() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User enter the data and complete the process")
public void user_enter_the_data_and_complete_the_process() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("USer Can view the order and Download invoice")
public void u_ser_can_view_the_order_and_download_invoice() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User is already opened web site' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("User is already opened web site")
public void user_is_already_opened_web_site() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User search the product")
public void user_search_the_product() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User Can add product to Cart")
public void user_can_add_product_to_cart() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User navigate to cart page and Check Out Product and")
public void user_navigate_to_cart_page_and_check_out_product_and() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User enter the data and complete the process")
public void user_enter_the_data_and_complete_the_process() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("USer Can view the order and Download invoice")
public void u_ser_can_view_the_order_and_download_invoice() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$0(TestNGCucumberRunner.java:118)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:114)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="ScreenShotOnFaliure(org.testng.ITestResult)[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:17 EET" name="ScreenShotOnFaliure" finished-at="2021-05-12T18:28:18 EET" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=FAILURE method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@54bff557] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFaliure -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:18 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-05-12T18:28:27 EET" duration-ms="9209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User Registation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Registation]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="ScreenShotOnFaliure(org.testng.ITestResult)[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:27 EET" name="ScreenShotOnFaliure" finished-at="2021-05-12T18:28:27 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@54bff557] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFaliure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:27 EET" name="tearDownClass" finished-at="2021-05-12T18:28:27 EET" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="ClosrDriver()[pri:0, instance:runner.TestRunner@54bff557]" started-at="2021-05-12T18:28:27 EET" name="ClosrDriver" finished-at="2021-05-12T18:28:32 EET" duration-ms="4185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClosrDriver -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
